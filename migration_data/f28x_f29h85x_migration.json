{
    "changed": [
        {
            "code": "ERAD_INST_BUSCOMP8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_INST_BUSCOMP0",
            "fixMsg": "The correct enum constant 'ERAD_INST_BUSCOMP0' should be used. Index changed as BUSCOMP (EBC) instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_COUNTER4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_INST_COUNTER0",
            "fixMsg": "The correct enum constant 'ERAD_INST_COUNTER0' should be used. Index changed as COUNTER (SEC) instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_BUSCOMP_BUS_DRAB",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP_BUS_DRAB_W",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP_BUS_DRAB_W' should be used. Changed in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC0",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC0' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC1",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC1' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC2",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC2' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC3",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC3' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP5",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC4",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC4' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP6",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC5",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC5' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP7",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC6",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC6' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_HWBP8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_EBC7",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_EBC7' should be used. ERAD HWBP renamed as ERAD EBC submodule. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_COUNTER4_EVENT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_COUNTER0_EVENT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_COUNTER0_EVENT' should be used. Index changed as COUNTER (SEC) instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT5",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT6",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT7",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT9",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT10",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT11",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_PIE_INT12",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_PIPE_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_PIPE_INT' should be used. Interrupt architecture changed. Other alternatives are ERAD_EVENT_PIPE_RTINT (or) ERAD_EVENT_PIPE_NMI  (Use either of enum constant as per priority)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_TIMER0_TINT0",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_CPU1_TIMER0_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_CPU1_TIMER0_INT' should be used. Multicore device. Other alternatives are ERAD_EVENT_CPU2_TIMER0_INT (or) ERAD_EVENT_CPU3_TIMER0_INT (Use either of enum constant as per CPU core)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_TIMER1_TINT1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_CPU1_TIMER1_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_CPU1_TIMER1_INT' should be used. Multicore device. Other alternatives are ERAD_EVENT_CPU2_TIMER1_INT (or) ERAD_EVENT_CPU3_TIMER1_INT (Use either of enum constant as per CPU core)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_TIMER2_TINT2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_CPU1_TIMER2_INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_CPU1_TIMER2_INT' should be used. Multicore device. Other alternatives are ERAD_EVENT_CPU2_TIMER2_INT (or) ERAD_EVENT_CPU3_TIMER2_INT (Use either of enum constant as per CPU core)",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH1INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH1INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH1INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH1INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH2INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH2INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH2INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH2INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH3INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH3INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH3INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH3INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH4INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH4INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH4INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH4INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH5INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH5INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH5INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH5INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_DMACH6INT",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_RTDMA1_CH6INT",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_RTDMA1_CH6INT' should be used. F29H85x has 2 RTDMA instances. Other alternative is ERAD_EVENT_RTDMA2_CH6INT. Use either of the enum constant as per RTDMA instance. Note: RTDMA2 instance is unavailable when the device is in Lock-step",
            "compatible": false
        },
        {
            "code": "ERAD_EVENT_INPUTXBAR0",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_EVENT_INPUTXBAR16",
            "fixMsg": "The correct enum constant 'ERAD_EVENT_INPUTXBAR16' should be used. Index changed as starting from one in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_AND_MASK4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_AND_MASK0",
            "fixMsg": "The correct enum constant 'ERAD_AND_MASK0' should be used. Index changed as AND MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_OR_MASK4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_OR_MASK0",
            "fixMsg": "The correct enum constant 'ERAD_OR_MASK0' should be used. Index changed as OR MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC0",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC0' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC1",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC1' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC2",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC2' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC3",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC3' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP5",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC4",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC4' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP6",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC5",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC5' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP7",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC6",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC6' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_EBC7",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_EBC7' should be used. Index changed as EBC instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_OR1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK0",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK0' should be used. Index changed as OR MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_OR2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK1",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK1' should be used. Index changed as OR MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_OR3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK2",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK2' should be used. Index changed as OR MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_OR4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK3",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_OR_MASK3' should be used. Index changed as OR MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_AND1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK0",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK0' should be used. Index changed as AND MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_AND2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK1",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK1' should be used. Index changed as AND MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_AND3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK2",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK2' should be used. Index changed as AND MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_PCTRACE_WINDOWED_QUAL_HWBP_AND4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK3",
            "fixMsg": "The correct enum constant 'ERAD_PCTRACE_WINDOWED_QUAL_AND_MASK3' should be used. Index changed as AND MASK instances start from zero in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS1_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS1_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_SD3FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_ADCAEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCAEVT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCAEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_ECAP1_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP1_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP1_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_CMPSS1_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS1_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS1_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_INPUTXBAR1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_CLB1_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_ADCCEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCCEVT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCCEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS2_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS2_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_SD3FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_ADCAEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCAEVT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCAEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_ECAP2_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP2_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP2_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS2_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS2_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_INPUTXBAR2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_CLB1_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_ADCCEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCCEVT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCCEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS3_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS3_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_SD3FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_ADCAEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCAEVT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCAEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_ECAP3_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP3_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP3_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_CMPSS3_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS3_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS3_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_INPUTXBAR3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_CLB2_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_ADCCEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCCEVT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCCEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_CMPSS4_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS4_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS4_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_SD3FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_ADCAEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCAEVT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCAEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_ECAP4_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP4_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP4_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_CMPSS4_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS4_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS4_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_INPUTXBAR4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_CLB2_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_ADCCEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCCEVT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCCEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_CMPSS5_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS5_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS5_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_SD3FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_ADCBEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCBEVT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCBEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_ECAP5_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP5_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP5_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_CMPSS5_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS5_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS5_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_INPUTXBAR5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_CLB3_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_CMPSS6_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS6_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS6_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_SD3FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_ADCBEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCBEVT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCBEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_ECAP6_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECAP6_OUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECAP6_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX11_CMPSS6_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS6_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS6_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX11_INPUTXBAR6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_INPUTXBAR_INPUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_INPUTXBAR_INPUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX11_CLB3_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_CMPSS7_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS7_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS7_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_SD3FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_ADCBEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCBEVT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCBEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX13_CMPSS7_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS7_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS7_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX13_ADCSOCA",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCSOCA",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCSOCA' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX13_CLB4_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_CMPSS8_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS8_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS8_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_SD3FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD3FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD3FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_ADCBEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCBEVT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCBEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_EXTSYNCOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_EXTSYNCOUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_EXTSYNCOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX15_CMPSS8_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS8_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS8_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX15_ADCSOCB",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCSOCB",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCSOCB' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX15_CLB4_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX16_SD1FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX16_SD4FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX17_SD1FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX17_CLB5_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX18_SD1FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX18_SD4FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX18_ECATSYNC0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECATSYNC0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECATSYNC0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX19_SD1FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX19_CLB5_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX19_ECATSYNC1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ECATSYNC1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ECATSYNC1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX20_SD1FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX20_SD4FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX21_SD1FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX21_CLB6_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX21_FSIA_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_FSIA_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_FSIA_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX22_SD1FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX22_SD4FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX22_FSIB_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_FSIB_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_FSIB_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX23_SD1FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD1FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD1FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX23_CLB6_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX23_FSIC_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_FSIC_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_FSIC_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX24_SD2FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX24_SD4FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX24_FSID_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_FSID_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_FSID_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX25_SD2FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX26_SD2FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX26_SD4FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX27_SD2FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX28_SD2FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX28_SD4FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX28_XCLKOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_XCLKOUT",
            "fixMsg": "The correct enum constant 'XBAR_OUT_XCLKOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX29_SD2FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX30_SD2FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX30_SD4FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD4FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD4FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX30_EPG1_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_EPG1_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_EPG1_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX31_SD2FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_SD2FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_SD2FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX31_EPG1_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_EPG1_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_EPG1_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX50_CPU1_ADCCHECK_EVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU1_ADCCHECK_EVT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU1_ADCCHECK_EVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX51_CPU1_ADCCHECK_EVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU1_ADCCHECK_EVT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU1_ADCCHECK_EVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX52_ADCA_EXTMUXSEL0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCA_EXTMUXSEL0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCA_EXTMUXSEL0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX52_CPU1_ADCCHECK_EVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU1_ADCCHECK_EVT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU1_ADCCHECK_EVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX53_ADCA_EXTMUXSEL1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCA_EXTMUXSEL1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCA_EXTMUXSEL1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX53_CPU1_ADCCHECK_EVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU1_ADCCHECK_EVT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU1_ADCCHECK_EVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX54_ADCA_EXTMUXSEL2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCA_EXTMUXSEL2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCA_EXTMUXSEL2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX54_CPU2_ADCCHECK_EVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU2_ADCCHECK_EVT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU2_ADCCHECK_EVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX55_ADCA_EXTMUXSEL3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCA_EXTMUXSEL3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCA_EXTMUXSEL3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX55_CPU2_ADCCHECK_EVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU2_ADCCHECK_EVT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU2_ADCCHECK_EVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX56_ADCB_EXTMUXSEL0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCB_EXTMUXSEL0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCB_EXTMUXSEL0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX56_CPU2_ADCCHECK_EVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU2_ADCCHECK_EVT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU2_ADCCHECK_EVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX57_ADCB_EXTMUXSEL1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCB_EXTMUXSEL1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCB_EXTMUXSEL1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX57_CPU2_ADCCHECK_EVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CPU2_ADCCHECK_EVT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CPU2_ADCCHECK_EVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX58_CMPSS9_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS9_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS9_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX58_ADCB_EXTMUXSEL2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCB_EXTMUXSEL2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCB_EXTMUXSEL2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX59_CMPSS9_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS9_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS9_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX59_ADCB_EXTMUXSEL3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCB_EXTMUXSEL3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCB_EXTMUXSEL3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX60_CMPSS10_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS10_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS10_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX60_ADCC_EXTMUXSEL0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCC_EXTMUXSEL0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCC_EXTMUXSEL0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX61_CMPSS10_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS10_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS10_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX61_ADCC_EXTMUXSEL1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCC_EXTMUXSEL1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCC_EXTMUXSEL1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX62_CMPSS11_CTRIPOUTH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS11_CTRIPOUTH",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS11_CTRIPOUTH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX62_ADCC_EXTMUXSEL2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCC_EXTMUXSEL2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCC_EXTMUXSEL2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX63_CMPSS11_CTRIPOUTL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CMPSS11_CTRIPOUTL",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CMPSS11_CTRIPOUTL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX63_ADCC_EXTMUXSEL3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_ADCC_EXTMUXSEL3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_ADCC_EXTMUXSEL3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_CLB1_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_CLB5_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_CLB1_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_CLB5_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_CLB1_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX02_CLB5_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_CLB1_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX03_CLB5_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_CLB1_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX04_CLB5_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_CLB1_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX05_CLB5_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_CLB1_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX06_CLB5_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_CLB1_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB1_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB1_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX07_CLB5_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB5_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB5_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_CLB2_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_CLB6_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_CLB2_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_CLB6_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_CLB2_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX10_CLB6_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX11_CLB2_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX11_CLB6_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_CLB2_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_CLB6_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX13_CLB2_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX13_CLB6_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_CLB2_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX14_CLB6_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX15_CLB2_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB2_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB2_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX15_CLB6_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB6_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB6_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX16_CLB3_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX17_CLB3_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX18_CLB3_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX19_CLB3_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX20_CLB3_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX21_CLB3_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX22_CLB3_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX23_CLB3_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB3_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB3_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX24_CLB4_OUT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT0",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX25_CLB4_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT1",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX26_CLB4_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX27_CLB4_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX28_CLB4_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX29_CLB4_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX30_CLB4_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT6",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX30_EPG1_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_EPG1_OUT2",
            "fixMsg": "The correct enum constant 'XBAR_OUT_EPG1_OUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX31_CLB4_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_CLB4_OUT7",
            "fixMsg": "The correct enum constant 'XBAR_OUT_CLB4_OUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX31_EPG1_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_OUT_EPG1_OUT3",
            "fixMsg": "The correct enum constant 'XBAR_OUT_EPG1_OUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX00_CMPSS1_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS1_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS1_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX00_SD3FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX00_ADCAEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCAEVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCAEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX00_ECAP1_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP1_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP1_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX01_CMPSS1_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS1_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS1_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX01_INPUTXBAR1_INPUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX01_CLB1_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB1_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB1_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX01_ADCCEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCCEVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCCEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX02_CMPSS2_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS2_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS2_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX02_SD3FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX02_ADCAEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCAEVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCAEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX02_ECAP2_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP2_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP2_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX03_CMPSS2_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS2_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS2_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX03_INPUTXBAR1_INPUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX03_CLB1_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB1_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB1_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX03_ADCCEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCCEVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCCEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX04_CMPSS3_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS3_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS3_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX04_SD3FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX04_ADCAEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCAEVT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCAEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX04_ECAP3_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP3_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP3_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX05_CMPSS3_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS3_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS3_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX05_INPUTXBAR1_INPUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX05_CLB2_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB2_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB2_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX05_ADCCEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCCEVT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCCEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX06_CMPSS4_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS4_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS4_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX06_SD3FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX06_ADCAEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCAEVT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCAEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX06_ECAP4_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP4_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP4_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX07_CMPSS4_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS4_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS4_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX07_INPUTXBAR1_INPUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX07_CLB2_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB2_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB2_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX07_ADCCEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCCEVT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCCEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX08_CMPSS5_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS5_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS5_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX08_SD3FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX08_ADCBEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCBEVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCBEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX08_ECAP5_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP5_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP5_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX09_CMPSS5_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS5_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS5_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX09_INPUTXBAR1_INPUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX09_CLB3_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB3_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB3_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX10_CMPSS6_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS6_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS6_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX10_SD3FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX10_ADCBEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCBEVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCBEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX10_ECAP6_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP6_OUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP6_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX11_CMPSS6_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS6_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS6_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX11_INPUTXBAR1_INPUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT6",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX11_CLB3_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB3_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB3_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX12_CMPSS7_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS7_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS7_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX12_SD3FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX12_ADCBEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCBEVT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCBEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX13_CMPSS7_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS7_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS7_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX13_ADCSOCA",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCSOCA",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCSOCA' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX13_CLB4_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB4_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB4_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX14_CMPSS8_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS8_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS8_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX14_SD3FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD3FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD3FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX14_ADCBEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCBEVT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCBEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX14_EXTSYNCOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EXTSYNCOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EXTSYNCOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX15_CMPSS8_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS8_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS8_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX15_ADCSOCB",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ADCSOCB",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ADCSOCB' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX15_CLB4_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB4_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB4_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX16_SD1FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX16_SD4FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX17_SD1FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX17_INPUTXBAR1_INPUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT7",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX17_CLB5_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB5_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB5_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX18_SD1FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX18_SD4FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX18_ECATSYNC0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAT_SYNC0",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAT_SYNC0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX19_SD1FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX19_INPUTXBAR1_INPUT8",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT8",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT8' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX19_CLB5_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB5_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB5_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX19_ECATSYNC1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAT_SYNC1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAT_SYNC1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX20_SD1FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX20_SD4FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX20_FSIA_RX_TRIG1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_FSIA_RX_TRIG1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_FSIA_RX_TRIG1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX21_SD1FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX21_INPUTXBAR1_INPUT9",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT9",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT9' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX21_CLB6_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB6_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB6_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX21_FSIB_RX_TRIG1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_FSIB_RX_TRIG1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_FSIB_RX_TRIG1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX22_SD1FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX22_SD4FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX22_FSIC_RX_TRIG1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_FSIC_RX_TRIG1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_FSIC_RX_TRIG1' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX23_SD1FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD1FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD1FLT4_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX23_INPUTXBAR1_INPUT10",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT10",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT10' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX23_CLB6_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CLB6_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CLB6_OUT5' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX23_FSID_RX_TRIG1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_FSID_RX_TRIG1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_FSID_RX_TRIG1' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX24_SD2FLT1_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT1_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX24_SD4FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT3_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX25_SD2FLT1_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT1_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX25_INPUTXBAR1_INPUT11",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT11",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT11' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX25_MCANA_FEVT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANA_FEVT0",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANA_FEVT0' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX26_SD2FLT2_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT2_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX26_SD4FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT3_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX26_MCANB_FEVT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANB_FEVT0",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANB_FEVT0' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX27_SD2FLT2_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT2_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX27_INPUTXBAR1_INPUT12",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT12",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT12' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX27_MCANA_FEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANA_FEVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANA_FEVT1' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX28_SD2FLT3_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT3_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX28_SD4FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT4_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX28_MCANB_FEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANB_FEVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANB_FEVT1' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX29_SD2FLT3_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT3_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX29_INPUTXBAR1_INPUT13",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT13",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT13' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX29_MCANA_FEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANA_FEVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANA_FEVT2' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX30_SD2FLT4_CEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT4_COMPH' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX30_SD4FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD4FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD4FLT4_COMPL' should be used. nan",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX30_MCANB_FEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_MCANB_FEVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_MCANB_FEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX31_SD2FLT4_CEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_SD2FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_SD2FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX31_INPUTXBAR1_INPUT14",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_INPUTXBAR_INPUT14",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_INPUTXBAR_INPUT14' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX32_EPWM1_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM1_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM1_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX32_EPWM1_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM1_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM1_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX32_EPWM1_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM1_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM1_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX32_ECAP1_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP1_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP1_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX33_EPWM2_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM2_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM2_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX33_EPWM2_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM2_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM2_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX33_EPWM2_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM2_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM2_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX33_ECAP2_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP2_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP2_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX34_EPWM3_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM3_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM3_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX34_EPWM3_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM3_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM3_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX34_EPWM3_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM3_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM3_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX34_ECAP3_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP3_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP3_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX35_EPWM4_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM4_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM4_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX35_EPWM4_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM4_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM4_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX35_EPWM4_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM4_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM4_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX35_ECAP4_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP4_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP4_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX36_EPWM5_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM5_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM5_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX36_EPWM5_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM5_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM5_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX36_EPWM5_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM5_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM5_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX36_ECAP5_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP5_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP5_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX37_EPWM6_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM6_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM6_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX37_EPWM6_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM6_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM6_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX37_EPWM6_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM6_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM6_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX37_ECAP6_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_ECAP6_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_ECAP6_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX38_EPWM7_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM7_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM7_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX38_EPWM7_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM7_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM7_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX38_EPWM7_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM7_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM7_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX39_EPWM8_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM8_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM8_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX39_EPWM8_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM8_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM8_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX39_EPWM8_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM8_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM8_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX40_EPWM9_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM9_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM9_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX40_EPWM9_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM9_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM9_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX40_EPWM9_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM9_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM9_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX41_EPWM10_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM10_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM10_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX41_EPWM10_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM10_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM10_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX41_EPWM10_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM10_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM10_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX42_EPWM11_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM11_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM11_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX42_EPWM11_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM11_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM11_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX42_EPWM11_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM11_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM11_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX43_EPWM12_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM12_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM12_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX43_EPWM12_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM12_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM12_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX43_EPWM12_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM12_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM12_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX44_EPWM13_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM13_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM13_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX44_EPWM13_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM13_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM13_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX44_EPWM13_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM13_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM13_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX45_EPWM14_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM14_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM14_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX45_EPWM14_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM14_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM14_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX45_EPWM14_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM14_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM14_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX46_EPWM15_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM15_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM15_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX46_EPWM15_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM15_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM15_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX46_EPWM15_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM15_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM15_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX47_EPWM16_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM16_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM16_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX47_EPWM16_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM16_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM16_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX47_EPWM16_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM16_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM16_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX48_EPWM17_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM17_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM17_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX48_EPWM17_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM17_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM17_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX48_EPWM17_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM17_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM17_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX49_EPWM18_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM18_TRIPOUT",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM18_TRIPOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX49_EPWM18_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM18_DE_DEMONTRIP",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM18_DE_DEMONTRIP' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX49_EPWM18_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_EPWM18_DE_ACTIVE",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_EPWM18_DE_ACTIVE' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX50_CPU1_ADCCHECK_EVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU1_ADCCHECK_EVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU1_ADCCHECK_EVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX51_CPU1_ADCCHECK_EVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU1_ADCCHECK_EVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU1_ADCCHECK_EVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX52_CPU1_ADCCHECK_EVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU1_ADCCHECK_EVT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU1_ADCCHECK_EVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX53_CPU1_ADCCHECK_EVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU1_ADCCHECK_EVT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU1_ADCCHECK_EVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX54_CPU2_ADCCHECK_EVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU2_ADCCHECK_EVT1",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU2_ADCCHECK_EVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX55_CPU2_ADCCHECK_EVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU2_ADCCHECK_EVT2",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU2_ADCCHECK_EVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX56_CPU2_ADCCHECK_EVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU2_ADCCHECK_EVT3",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU2_ADCCHECK_EVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX57_CPU2_ADCCHECK_EVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CPU2_ADCCHECK_EVT4",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CPU2_ADCCHECK_EVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX58_CMPSS9_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS9_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS9_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX59_CMPSS9_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS9_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS9_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX60_CMPSS10_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS10_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS10_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX61_CMPSS10_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS10_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS10_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX62_CMPSS11_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS11_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS11_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX63_CMPSS11_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_EPWM_CMPSS11_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_EPWM_CMPSS11_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX00_CMPSS1_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS1_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS1_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX00_SD3FLT1_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX00_ADCAEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCAEVT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCAEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX00_ECAP1_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP1_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP1_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX01_CMPSS1_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS1_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS1_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX01_INPUTXBAR1_INPUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX01_CLB1_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB1_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB1_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX01_ADCCEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCCEVT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCCEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX02_CMPSS2_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS2_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS2_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX02_SD3FLT1_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX02_ADCAEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCAEVT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCAEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX02_ECAP2_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP2_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP2_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX03_CMPSS2_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS2_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS2_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX03_INPUTXBAR1_INPUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX03_CLB1_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB1_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB1_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX03_ADCCEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCCEVT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCCEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX04_CMPSS3_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS3_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS3_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX04_SD3FLT2_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX04_ADCAEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCAEVT3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCAEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX04_ECAP3_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP3_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP3_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX05_CMPSS3_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS3_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS3_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX05_INPUTXBAR1_INPUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX05_CLB2_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB2_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB2_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX05_ADCCEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCCEVT3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCCEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX06_CMPSS4_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS4_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS4_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX06_SD3FLT2_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX06_ADCAEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCAEVT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCAEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX06_ECAP4_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP4_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP4_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX07_CMPSS4_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS4_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS4_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX07_INPUTXBAR1_INPUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX07_CLB2_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB2_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB2_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX07_ADCCEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCCEVT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCCEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX08_CMPSS5_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS5_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS5_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX08_SD3FLT3_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX08_ADCBEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCBEVT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCBEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX08_ECAP5_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP5_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP5_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX09_CMPSS5_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS5_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS5_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX09_INPUTXBAR1_INPUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX09_CLB3_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB3_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB3_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX10_CMPSS6_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS6_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS6_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX10_SD3FLT3_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX10_ADCBEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCBEVT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCBEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX10_ECAP6_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ECAP6_OUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ECAP6_OUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX11_CMPSS6_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS6_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS6_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX11_INPUTXBAR1_INPUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT6",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT6' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX11_CLB3_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB3_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB3_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX12_CMPSS7_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS7_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS7_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX12_SD3FLT4_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX12_ADCBEVT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCBEVT3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCBEVT3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX13_CMPSS7_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS7_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS7_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX13_ADCSOCA",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCSOCA",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCSOCA' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX13_CLB4_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB4_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB4_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX13_MCANB_FEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANB_FEVT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANB_FEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX14_CMPSS8_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS8_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS8_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX14_SD3FLT4_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD3FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD3FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX14_ADCBEVT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCBEVT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCBEVT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX14_EXTSYNCOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_EXTSYNCOUT",
            "fixMsg": "The correct enum constant 'XBAR_CLB_EXTSYNCOUT' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX15_CMPSS8_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS8_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS8_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX15_ADCSOCB",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_ADCSOCB",
            "fixMsg": "The correct enum constant 'XBAR_CLB_ADCSOCB' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX15_CLB4_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB4_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB4_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX15_MCANB_FEVT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANB_FEVT0",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANB_FEVT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX16_SD1FLT1_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX16_SD4FLT1_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX16_FSIA_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIA_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIA_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX16_FSIA_RX_TRIG3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIA_RX_TRIG3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIA_RX_TRIG3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX17_SD1FLT1_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX17_INPUTXBAR1_INPUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT7",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT7' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX17_CLB5_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB5_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB5_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX18_SD1FLT2_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX18_SD4FLT1_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX18_FSIB_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIB_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIB_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX18_FSIB_RX_TRIG3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIB_RX_TRIG3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIB_RX_TRIG3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX19_SD1FLT2_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX19_INPUTXBAR1_INPUT8",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT8",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT8' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX19_CLB5_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB5_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB5_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX20_SD1FLT3_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX20_SD4FLT2_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX20_FSIC_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIC_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIC_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX20_FSIC_RX_TRIG3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSIC_RX_TRIG3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSIC_RX_TRIG3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX21_SD1FLT3_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX21_INPUTXBAR1_INPUT9",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT9",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT9' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX21_CLB6_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB6_OUT4",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB6_OUT4' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX22_SD1FLT4_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX22_SD4FLT2_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX22_FSID_RX_TRIG2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSID_RX_TRIG2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSID_RX_TRIG2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX22_FSID_RX_TRIG3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_FSID_RX_TRIG3",
            "fixMsg": "The correct enum constant 'XBAR_CLB_FSID_RX_TRIG3' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX23_SD1FLT4_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD1FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD1FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX23_INPUTXBAR1_INPUT10",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT10",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT10' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX23_CLB6_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CLB6_OUT5",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CLB6_OUT5' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX23_CPU2_ERADEVT9",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU2_ERADEVT9",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU2_ERADEVT9' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX24_SD2FLT1_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT1_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT1_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX24_SD4FLT3_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX24_CPU1_ERADEVT8",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU1_ERADEVT8",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU1_ERADEVT8' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX24_CMPSS9_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS9_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS9_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX25_SD2FLT1_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT1_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT1_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX25_INPUTXBAR1_INPUT11",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT11",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT11' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX25_MCANA_FEVT0",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANA_FEVT0",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANA_FEVT0' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX25_CPU2_ERADEVT10",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU2_ERADEVT10",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU2_ERADEVT10' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX26_SD2FLT2_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT2_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT2_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX26_SD4FLT3_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX26_CPU1_ERADEVT9",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU1_ERADEVT9",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU1_ERADEVT9' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX26_CMPSS9_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS9_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS9_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX27_SD2FLT2_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT2_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT2_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX27_INPUTXBAR1_INPUT12",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT12",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT12' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX27_MCANA_FEVT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANA_FEVT1",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANA_FEVT1' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX27_CPU2_ERADEVT11",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU2_ERADEVT11",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU2_ERADEVT11' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX28_SD2FLT3_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT3_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT3_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX28_SD4FLT4_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX28_CPU1_ERADEVT10",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU1_ERADEVT10",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU1_ERADEVT10' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX28_CMPSS10_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS10_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS10_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX29_SD2FLT3_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT3_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT3_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX29_INPUTXBAR1_INPUT13",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT13",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT13' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX29_MCANA_FEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANA_FEVT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANA_FEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX29_CMPSS10_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS10_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS10_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX30_SD2FLT4_COMPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT4_COMPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT4_COMPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX30_SD4FLT4_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD4FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD4FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX30_CPU1_ERADEVT11",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CPU1_ERADEVT11",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CPU1_ERADEVT11' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX30_CMPSS11_CTRIPH",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS11_CTRIPH",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS11_CTRIPH' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX31_SD2FLT4_COMPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_SD2FLT4_COMPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_SD2FLT4_COMPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX31_INPUTXBAR1_INPUT14",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_INPUTXBAR_INPUT14",
            "fixMsg": "The correct enum constant 'XBAR_CLB_INPUTXBAR_INPUT14' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX31_MCANB_FEVT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_MCANB_FEVT2",
            "fixMsg": "The correct enum constant 'XBAR_CLB_MCANB_FEVT2' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX31_CMPSS11_CTRIPL",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "XBAR_CLB_CMPSS11_CTRIPL",
            "fixMsg": "The correct enum constant 'XBAR_CLB_CMPSS11_CTRIPL' should be used. XBAR architecture changed in F29H85x",
            "compatible": false
        },
        {
            "code": "ADC_REFERENCE_EXTERNAL",
            "type": "enum",
            "peripheral": "adc",
            "fix": "ASYSCTL_VREF_EXTERNAL",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREF_EXTERNAL' should be used. enummoved to  AsysCtl driver",
            "compatible": false
        },
        {
            "code": "ADC_REFERENCE_INTERNAL",
            "type": "enum",
            "peripheral": "adc",
            "fix": "ASYSCTL_VREF_INTERNAL_3_3_V",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREF_INTERNAL_3_3_V' should be used. Other alternative ASYSCTL_VREF_INTERNAL_2_5_V  based on required voltage. enummoved to  AsysCtl driver",
            "compatible": false
        },
        {
            "code": "ADC_REFERENCE_3_3V",
            "type": "enum",
            "peripheral": "adc",
            "fix": "ASYSCTL_VREF_INTERNAL_3_3_V",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREF_INTERNAL_3_3_V' should be used. enummoved to  AsysCtl driver",
            "compatible": false
        },
        {
            "code": "ADC_REFERENCE_2_5V",
            "type": "enum",
            "peripheral": "adc",
            "fix": "ASYSCTL_VREF_INTERNAL_2_5_V",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREF_INTERNAL_2_5_V' should be used. enummoved to  AsysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_SOURCE_SYS",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_SOURCE_SYSCLK",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_SOURCE_SYSCLK' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_SOURCE_INTOSC1",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_SOURCE_INTOSC1",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_SOURCE_INTOSC1' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_SOURCE_INTOSC2",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_SOURCE_INTOSC2",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_SOURCE_INTOSC2' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_SOURCE_XTAL",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_SOURCE_XTAL",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_SOURCE_XTAL' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_PRESCALER_1",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_DIV_1",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_DIV_1' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_PRESCALER_2",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_DIV_2",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_DIV_2' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_PRESCALER_4",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_DIV_4",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_DIV_4' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_PRESCALER_8",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_DIV_8",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_DIV_8' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_PRESCALER_16",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "SYSCTL_TIMER2CLK_DIV_16",
            "fixMsg": "The correct enum constant 'SYSCTL_TIMER2CLK_DIV_16' should be used. enummoved to SysCtl driver",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_PLLSYS",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_PLLSYS",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_PLLSYS' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_SYSCLK",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_CPU1CLK",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_CPU1CLK' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_SYSCLK2",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_CPU2CLK",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_CPU2CLK' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_INTOSC1",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_INTOSC1",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_INTOSC1' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_INTOSC2",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_INTOSC2",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_INTOSC2' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_XTALOSC",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SYSCTL_XCLKOUT_SOURCE_XTALOSC",
            "fixMsg": "The correct enum constant 'SYSCTL_XCLKOUT_SOURCE_XTALOSC' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CORE_DEACTIVE",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SSU_CORE_RESET_DEACTIVE",
            "fixMsg": "The correct enum constant 'SSU_CORE_RESET_DEACTIVE' should be used. enummoved to SSU in F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CORE_ACTIVE",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "SSU_CORE_RESET_ACTIVE",
            "fixMsg": "The correct enum constant 'SSU_CORE_RESET_ACTIVE' should be used. enummoved to SSU in F29H85x",
            "compatible": false
        },
        {
            "code": "ASYSCTL_VREFHIA",
            "type": "enum",
            "peripheral": "asysctl",
            "fix": "ASYSCTL_VREFHIAB",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREFHIAB' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "ASYSCTL_VREFHIB",
            "type": "enum",
            "peripheral": "asysctl",
            "fix": "ASYSCTL_VREFHIAB",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREFHIAB' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "ASYSCTL_VREFHIC",
            "type": "enum",
            "peripheral": "asysctl",
            "fix": "ASYSCTL_VREFHICDE",
            "fixMsg": "The correct enum constant 'ASYSCTL_VREFHICDE' should be used. enumchanged in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_CPU1_L_CPU2_R",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_CPU1_L_CPU2_R_CH0",
            "fixMsg": "The correct enum constant 'IPC_CPU1_L_CPU2_R_CH0' should be used. There are four blocks of IPC registers between any two C29x cores. Other alternatives are IPC_CPU1_L_CPU2_R_CH1 (or) IPC_CPU1_L_CPU2_R_CH2 (or) IPC_CPU1_L_CPU2_R_CH3",
            "compatible": false
        },
        {
            "code": "IPC_CPU2_L_CPU1_R",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_CPU2_L_CPU1_R_CH0",
            "fixMsg": "The correct enum constant 'IPC_CPU2_L_CPU1_R_CH0' should be used. There are four blocks of IPC registers between any two C29x cores. Other alternatives are IPC_CPU2_L_CPU1_R_CH1 (or) IPC_CPU2_L_CPU1_R_CH2 (or) IPC_CPU2_L_CPU1_R_CH3",
            "compatible": false
        },
        {
            "code": "ADC_setVREF",
            "type": "function",
            "peripheral": "adc",
            "fix": "ASysCtl_setVREF(ASysCtl_Vref vref, ASysCtl_VrefMode mode)",
            "fixMsg": "Function changed to AsysCtl_setVREF(from Asysctl driver) with enumchange and number of arguments change",
            "compatible": false
        },
        {
            "code": "ADC_forceMultipleSOC",
            "type": "function",
            "peripheral": "adc",
            "fix": "ADC_forceMultipleSOC(uint32_t base, uint32_t socMask)",
            "fixMsg": "Function is compatible but socMask argument changed from uint16_t to uint32_t since F29 device supports 32 SOCs",
            "compatible": true
        },
        {
            "code": "ADC_setInterruptSource",
            "type": "function",
            "peripheral": "adc",
            "fix": "ADC_setInterruptSource(uint32_t base, ADC_IntNumber adcIntNum, ADC_IntTrigger intTrigger)",
            "fixMsg": "Function is compatible, argument intTrigger can be used as ADC_IntTrigger enumfrom ADC driver",
            "compatible": true
        },
        {
            "code": "ADC_setMode",
            "type": "function",
            "peripheral": "adc",
            "fix": "ADC_setMode(uint32_t base, ADC_Resolution resolution, ADC_SignalMode signalMode)",
            "fixMsg": "Function is compatible. In F29H85x, 16 bit resolution and differential mode is only supported by ADCA and ADCB - Assert check added",
            "compatible": true
        },
        {
            "code": "DCC_enableSingleShotMode",
            "type": "function",
            "peripheral": "dcc",
            "fix": "DCC_enableSingleShotMode(uint32_t base)",
            "fixMsg": "Removed the argument  'mode'.In F29H85x, only the DCC_MODE_COUNTER_ZERO option is supported",
            "compatible": false
        },
        {
            "code": "EQEP_selectSource",
            "type": "function",
            "peripheral": "eqep",
            "fix": "EQEP_selectSource(uint32_t base, EQEP_SourceSelect sourceConfig )",
            "fixMsg": "Function is compatible. In F29H85x, for argument souceConfig enum constant  EQEP_SOURCE_DEVICE_PIN is not available instead  EQEP_SOURCE_INPUTXBAR by enabling INPUTXBAR",
            "compatible": true
        },
        {
            "code": "FSI_delayWait",
            "type": "function",
            "peripheral": "fsi",
            "fix": "SysCtl_delay(uint32_t count)",
            "fixMsg": "Function changed to SysCtl_delay with same parameter entry, function used from SysCtl driver",
            "compatible": false
        },
        {
            "code": "MCAN_selectClockSource",
            "type": "function",
            "peripheral": "mcan",
            "fix": "SysCtl_setMCANClock(SysCtl_MCANInstance mcanInst, SysCtl_MCANClkSource clksrc, SysCtl_MCANClkDivider divider)",
            "fixMsg": "Function changed to SysCtl_setMCANClock used from SysCtl driver with macnInst enumupdate and new argumnet entry as divider",
            "compatible": false
        },
        {
            "code": "SPI_setConfig",
            "type": "function",
            "peripheral": "spi",
            "fix": "SPI_setConfig(uint32_t base, uint32_t sysclkHz, SPI_TransferProtocol protocol, SPI_Mode mode, uint32_t bitRate, uint16_t dataWidth)",
            "fixMsg": "Function  argument entry lspclk changed to sysclkHz (macro DEVICE_SYSCLK_FEQ can be used). As LSPCLK domain is not supported for F29 device.",
            "compatible": false
        },
        {
            "code": "CPUTimer_selectClockSource",
            "type": "function",
            "peripheral": "cputimer",
            "fix": "SysCtl_setCputimer2Clock(SysCtl_Cputimer2ClkSource source, SysCtl_Cputimer2ClkDivider divider)",
            "fixMsg": "Function changed to SysCtl_setCputimer2Clock. enummoved to SysCtl driver and 0paaremeter entry base removed",
            "compatible": false
        },
        {
            "code": "SysCtl_selectCPUForPeripheralInstance",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_selectCPUForPeripheral(SysCtl_PeripheralConfig peripheral,\r\nSysCtl_CPUSel cpuInst)",
            "fixMsg": "Function renamed to SysCtl_selectCPUForPeripheral and parameter entry is compatible",
            "compatible": false
        },
        {
            "code": "SysCtl_getResetCause",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_getResetCause(void)",
            "fixMsg": "Function is compatible. The list of reset causes in the device is different. Refer to the API guide for more details.",
            "compatible": true
        },
        {
            "code": "SysCtl_clearResetCause",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_clearResetCause(uint32_t rstCauses)",
            "fixMsg": "Function is compatible. The list of reset causes in the device is different. Refer to the API guide for more details.",
            "compatible": true
        },
        {
            "code": "SysCtl_simulateReset",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_simulateReset(void)",
            "fixMsg": "Function argument entry is removed, as in F29H85x there is a single reset cause that can be simulated",
            "compatible": false
        },
        {
            "code": "SysCtl_setClock",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setClock(Sysctl_PLLClockSource oscSrc, Sysctl_PLLConfig pllConfig, Sysctl_PLLRefDiv refDiv, Sysctl_PLLIMult iMult, Sysctl_PLLODiv oDiv, Sysctl_PLLSysDiv sysDiv, uint32_t dccBase)",
            "fixMsg": "Function is not compatible. Multiple parameter entry needed. Refer to API guide for more details",
            "compatible": false
        },
        {
            "code": "SysCtl_setEPWMClockDivider",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setEPWMClock(SysCtl_EPWMClkDivider divider)",
            "fixMsg": "Function renamed to SysCtl_setEPWMClock. Parameter entry is compatible",
            "compatible": false
        },
        {
            "code": "SysCtl_setEMIF1ClockDivider",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setEMIF1Clock(SysCtl_EMIFClkDivider divider)",
            "fixMsg": "Function renamed to SysCtl_setEMIF1Clock. Parameter entry is compatible",
            "compatible": false
        },
        {
            "code": "SysCtl_setLINAClockDivider",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setLINAClock(SysCtl_LINClkDivider divider)",
            "fixMsg": "Function renamed to SysCtl_setLINAClock. Parameter entry is compatible",
            "compatible": false
        },
        {
            "code": "SysCtl_setLINBClockDivider",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setLINBClock(SysCtl_LINClkDivider divider)",
            "fixMsg": "Function renamed to SysCtl_setLINBClock. Parameter entry is compatible",
            "compatible": false
        },
        {
            "code": "SysCtl_selectClockOutSource",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setXClk(SysCtl_XClkSource clksrc, SysCtl_XClkDivider divider)",
            "fixMsg": "Function changed to  SysCtl_setXClk. Same function used for configuring clock source and divider because of this parameter entries changed",
            "compatible": false
        },
        {
            "code": "SysCtl_setXClk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setXClk(SysCtl_XClkSource clksrc, SysCtl_XClkDivider divider)",
            "fixMsg": "Same function used for configuring clock source and divider because of this parameter entries changed",
            "compatible": false
        },
        {
            "code": "SysCtl_setECatClk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setECatClock(SysCtl_ECatClkDivider divider, SysCtl_ECatPhyClk phyEnable)",
            "fixMsg": "Function changed to SysCtl_setECatClock. Parameter entry source removed and enable can be provided as enumentry ",
            "compatible": false
        },
        {
            "code": "SysCtl_setMCANClk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setMCANClock(SysCtl_MCANInstance mcanInst, SysCtl_MCANClkSource clksrc, SysCtl_MCANClkDivider divider)",
            "fixMsg": "Function changed to  SysCtl_setMCANClock. Same function used for configuring clock source and divider because of this parameter entry added",
            "compatible": false
        },
        {
            "code": "SysCtl_setCputimer2Clk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setCputimer2Clock(SysCtl_Cputimer2ClkSource source,SysCtl_Cputimer2ClkDivider divider)",
            "fixMsg": "Function changed to  SysCtl_setCputimer2Clock. Same function used for configuring clock source and divider because of this parameter entries interchanged ( to maintain standard)",
            "compatible": false
        },
        {
            "code": "SysCtl_CLBClkConfig",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setCLBClock(SysCtl_CLBClkDivider divider, SysCtl_CLBTClkDivider tdivider, uint8_t clkMode)",
            "fixMsg": "Function changed to SysCtl_setCLBClock. Parameter entry for CLB CLK didviders and mode for SYNC/ASYNC for each instance",
            "compatible": false
        },
        {
            "code": "SysCtl_turnOnOsc",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_turnOnXTAL(void)",
            "fixMsg": "Function changed to SysCtl_turnOnXTAL. Since XTAL is only input option",
            "compatible": false
        },
        {
            "code": "SysCtl_turnOffOsc",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_turnOffXTAL(void)",
            "fixMsg": "Function changed to SysCtl_turnOffXTAL. Since XTAL is only input option",
            "compatible": false
        },
        {
            "code": "SysCtl_enableLPMWakeupPin",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_enableLPMWakeupPin(SysCtl_LPMWakeupPin pin)",
            "fixMsg": "Function is compatible. enumadded for pin",
            "compatible": true
        },
        {
            "code": "SysCtl_disableLPMWakeupPin",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_disableLPMWakeupPin(SysCtl_LPMWakeupPin pin)",
            "fixMsg": "Function is compatible. enumadded for pin",
            "compatible": true
        },
        {
            "code": "SysCtl_enableCMPSSLPMWakeupPin",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_enableLPMWakeupPin(SysCtl_LPMWakeupPin pin)",
            "fixMsg": "Function changed to SysCtl_enableLPMWakeupPin. enumadded for pin",
            "compatible": false
        },
        {
            "code": "SysCtl_disableCMPSSLPMWakeupPin",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_disableLPMWakeupPin(SysCtl_LPMWakeupPin pin)",
            "fixMsg": "Function changed to SysCtl_disableLPMWakeupPin. enumadded for pin",
            "compatible": false
        },
        {
            "code": "SysCtl_delay",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_delay(uint32_t count)",
            "fixMsg": "Function is compatible. Total cycles taken by the function is different. In C29, it takes 4 cycles per iteration plus 11 cycles. In C28, it takes 5 cycles per iteration plus 9 cycles. The marcro DEVICE_DELAY_US(x) will remain compatible",
            "compatible": true
        },
        {
            "code": "SysCtl_setPLLSysClk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setClock(Sysctl_PLLClockSource oscSrc, Sysctl_PLLConfig pllConfig, Sysctl_PLLRefDiv refDiv, Sysctl_PLLIMult iMult, Sysctl_PLLODiv oDiv, Sysctl_PLLSysDiv sysDiv, uint32_t dccBase)",
            "fixMsg": "Function changed to SysCtl_setClock. Multiple parameter entry needed. Refer to API guide for more details",
            "compatible": false
        },
        {
            "code": "SysCtl_setExternalOscMode",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_setClock(Sysctl_PLLClockSource oscSrc, Sysctl_PLLConfig pllConfig, Sysctl_PLLRefDiv refDiv, Sysctl_PLLIMult iMult, Sysctl_PLLODiv oDiv, Sysctl_PLLSysDiv sysDiv, uint32_t dccBase)",
            "fixMsg": "Function changed to SysCtl_setClock. Multiple parameter entry needed. Refer to API guide for more details",
            "compatible": false
        },
        {
            "code": "SysCtl_resetDevice",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_simulateReset(void)",
            "fixMsg": "Function changed to SysCtl_simulateReset",
            "compatible": false
        },
        {
            "code": "SysCtl_getCPU2ResetStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_isCPU2Reset(void)",
            "fixMsg": "Not supported in F29H85x. Use function SysCtl_isCPU2Reset to get the CPU reset status",
            "compatible": false
        },
        {
            "code": "SysCtl_controlCPU2Reset",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SSU_controlCPUReset(SSU_CPUID cpu, SSU_CoreReset control)",
            "fixMsg": "Function changed to SSU_controlCPUReset. ",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAnalogReferenceInternal",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setVREF(ASysCtl_Vref vref, ASysCtl_VrefMode mode)",
            "fixMsg": "Function changed to AsysCtl_setVREF and in same function selection of analog reference volateg to internal/external",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAnalogReferenceExternal",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setVREF(ASysCtl_Vref vref, ASysCtl_VrefMode mode)",
            "fixMsg": "Function changed to AsysCtl_setVREF and in same function selection of analog reference volateg to internal/external",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAnalogReference2P5",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setVREF(ASysCtl_Vref vref, ASysCtl_VrefMode mode)",
            "fixMsg": "Function changed to AsysCtl_setVREF and in same function selection of analog reference volateg to internal/external",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAnalogReference1P65",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setVREF(ASysCtl_Vref vref, ASysCtl_VrefMode mode)",
            "fixMsg": "Function changed to AsysCtl_setVREF and in same function selection of analog reference volateg to internal/external",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPHNMux",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPHNMuxValue",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPLNMux",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPLNMuxValue",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPHPMux",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_selectCMPLPMux",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_configCMPMux(AsysCtl_CMPselect selectMux)",
            "fixMsg": "Function changed to ASysCtl_configCMPMux and used for selecting required CMP mux (common for CMPHP, CMPHN, CMPLP and CMPLN)",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAGPIOFilterRight",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setAGPIOFilter(uint32_t config)",
            "fixMsg": "Function changed to ASysCtl_setAGPIOFilter with same input parameter",
            "compatible": false
        },
        {
            "code": "ASysCtl_setAGPIOFilterBottom",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "ASysCtl_setAGPIOFilter(uint32_t config)",
            "fixMsg": "Function changed to ASysCtl_setAGPIOFilter with same input parameter",
            "compatible": false
        },
        {
            "code": "Interrupt_enableGlobal",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "Interrupt_enableGlobal(void)",
            "fixMsg": "Function is compatible. In F28, this function enables the interrupt in the CPU and returns true if was disabled when the function was called.In F29, this enables INTs and RTINTs in the PIPE module. RTINTs are always enabled in the CPU. Use the macro EINT/ENINT for enabling interrupts in the CPU. F29 function does not return any value",
            "compatible": true
        },
        {
            "code": "Interrupt_disableGlobal",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "Interrupt_disableGlobal(void)",
            "fixMsg": "Function is compatible. In F28, this function disables the interrupt in the CPU and returns true if was disabled when the function was called.In F29, this disables INTs and RTINTs in the PIPE module. RTINTs are always enabled in the CPU. Use the macro DINT/DISINT for disabling interrupts in the CPU. F29 function does not return any value",
            "compatible": true
        },
        {
            "code": "Interrupt_enablePIE",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "Interrupt_enableGlobal(void)",
            "fixMsg": "Functionality can be reproduced using Interrupt_enableGlobal in F29",
            "compatible": false
        },
        {
            "code": "Interrupt_disablePIE",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "Interrupt_disableGlobal(void)",
            "fixMsg": "Functionality can be reproduced using Interrupt_disableGlobal in F29",
            "compatible": false
        },
        {
            "code": "DMA_initController",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_initController(uint32_t base)",
            "fixMsg": "In F29H85x device, two RTDMA instances are supported. Function name remains same with added parameter base -  base address of the RTDMA instance. Registers writeable by CPU1.LINK1, CPU1.LINK2 only. Refer TRM for more details.",
            "compatible": false
        },
        {
            "code": "DMA_setEmulationMode",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_setEmulationMode(uint32_t base, DMA_EmulationMode mode)",
            "fixMsg": "In F29H85x device, two RTDMA instances are supported. Function name remains same with added parameter base -  base address of the RTDMA instance. Registers writeable by CPU1.LINK1, CPU1.LINK2 only. Refer TRM for more details.",
            "compatible": false
        },
        {
            "code": "DMA_setPriorityMode",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_setPriorityMode(uint32_t base, DMA_PriorityMode priorityMode)",
            "fixMsg": "In F29H85x device, two RTDMA instances are supported. Function name remains same with added parameter base -  base address of the RTDMA instance and enumadded for priority mode. F29 allows selection between Round Robin priority mode and Software configurable priority, In F28, the selection is between Round Robin priority mode and High priority for channel 1. Registers writeable by CPU1.LINK1, CPU1.LINK2 only. Refer TRM for more details.",
            "compatible": false
        },
        {
            "code": "DMA_configMode",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_configMode(uint32_t base, DMA_Trigger trigger, uint32_t config);",
            "fixMsg": "Function is compatible with F28. F29 API provides support for independently configuring the data size of read and write access. Refer to the API guide for more details.",
            "compatible": true
        },
        {
            "code": "DMA_configChannel",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_configChannel(uint32_t base, const DMA_ConfigParams *transfParams);",
            "fixMsg": "Function is compatible. Update the transfParams parameter with the correct burst size, and address step sizes.",
            "compatible": true
        },
        {
            "code": "DMA_configBurst",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_configBurst(uint32_t base, uint16_t size, int16_t srcStep, int16_t destStep);",
            "fixMsg": "Function is compatible. Update the parameters size, srcStep and destStep.",
            "compatible": true
        },
        {
            "code": "DMA_configTransfer",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_configTransfer(uint32_t base, uint32_t transferSize, int16_t srcStep, int16_t destStep);",
            "fixMsg": "Function is compatible. Update the parameters transferSize, srcStep and destStep.",
            "compatible": true
        },
        {
            "code": "DMA_configWrap",
            "type": "function",
            "peripheral": "dma",
            "fix": "DMA_configWrap(uint32_t base, uint32_t srcWrapSize, int16_t srcStep,uint32_t destWrapSize, int16_t destStep);",
            "fixMsg": "Function is compatible. Update the parameters srcWrapSize,srcStep, destWrapSize and destStep",
            "compatible": true
        },
        {
            "code": "IPC_setFlagLtoR",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_setFlagLtoR(IPC_Channel_t ipcChannel, uint32_t flags)",
            "fixMsg": "Function is compatible. Parameter name changed from ipcType to ipcChannel with corresponding enumIPC_Channel_t",
            "compatible": true
        },
        {
            "code": "IPC_clearFlagLtoR",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_clearFlagLtoR(IPC_Channel_t ipcChannel, uint32_t flags)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_ackFlagRtoL",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_ackFlagRtoL(IPC_Channel_t ipcChannel, uint32_t flags)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_isFlagBusyLtoR",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_isFlagBusyLtoR(IPC_Channel_t ipcChannel, uint32_t flags)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_isFlagBusyRtoL",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_isFlagBusyRtoL(IPC_Channel_t ipcChannel, uint32_t flags)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_waitForFlag",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_waitForFlag(IPC_Channel_t ipcChannel, uint32_t flag)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_waitForAck",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_waitForAck(IPC_Channel_t ipcChannel, uint32_t flag)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_sync",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_sync(IPC_Channel_t ipcChannel, uint32_t flag)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_init",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_init(IPC_Channel_t ipcChannel)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_sendResponse",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_sendResponse(IPC_Channel_t ipcChannel, uint32_t data)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_getResponse",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_getResponse(IPC_Channel_t ipcChannel)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding Enum",
            "compatible": true
        },
        {
            "code": "IPC_sendCommand",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_sendCommand(IPC_Channel_t ipcChannel, uint32_t flags, uint32_t command, uint32_t addr, uint32_t data)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding enumand paramter addrCorrEnable is removed, as this was added specifically for F2838 device where the RAM address is different between C28 and CM cores",
            "compatible": true
        },
        {
            "code": "IPC_readCommand",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_readCommand(IPC_Channel_t ipcChannel, uint32_t flags,uint32_t *command, uint32_t *addr, uint32_t *data)",
            "fixMsg": "Function is compatible. Paramter entry changed from ipcType to ipcChannel with corresponding enumand paramter addrCorrEnable is removed, as this was added specifically for F2838 device where the RAM address is different between C28 and CM cores",
            "compatible": true
        },
        {
            "code": "IPC_getCounter",
            "type": "function",
            "peripheral": "ipc",
            "fix": "IPC_getCounter(void)",
            "fixMsg": "Function remains same with parameter ipcType removed.",
            "compatible": false
        },
        {
            "code": "IPC_claimFlashSemaphore",
            "type": "function",
            "peripheral": "ipc",
            "fix": "SSU_claimFlashSemaphore(void)",
            "fixMsg": "Function changed to SSU_claimFlashSemaphore. Refer SSU driver",
            "compatible": false
        },
        {
            "code": "IPC_releaseFlashSemaphore",
            "type": "function",
            "peripheral": "ipc",
            "fix": "SSU_releaseFlashSemaphore(void)",
            "fixMsg": "Function changed to SSU_releaseFlashSemaphore. Refer SSU driver",
            "compatible": false
        },
        {
            "code": "ERAD_setOwnership",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_setOwnership(ERAD_Owner owner)",
            "fixMsg": "Function is Compatible. Configures ownership for all submodules to specified owner. Separate functions available for configuring individual ownerships. Recommended to configure ownership for individual modules, since hardware breakpoints use the same EBC instances",
            "compatible": true
        },
        {
            "code": "ERAD_getBusCompStatus",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_getBusCompStatus(ERAD_BusCompInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_clearBusCompEvent",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_clearBusCompEvent(ERAD_BusCompInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_getCounterStatus",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_getCounterStatus(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_configBusComp",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_configBusComp(ERAD_BusCompInstance instance, ERAD_BusComp_Config config_params);",
            "fixMsg": "ERAD_BusComp_Config structure updated (Stack qualification)",
            "compatible": false
        },
        {
            "code": "ERAD_configCounterInCountingMode",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_configCounterInCountingMode(ERAD_CounterInstance instance,ERAD_Counter_Config config_params);",
            "fixMsg": "ERAD_Counter_Config structure updated to include enable_nmi field",
            "compatible": false
        },
        {
            "code": "ERAD_configCounterInStartStopMode",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_configCounterInStartStopMode(ERAD_CounterInstance instance, ERAD_Counter_Config config_params,ERAD_Counter_Input_Event start_event,ERAD_Counter_Input_Event stop_event);",
            "fixMsg": "ERAD_Counter_Config structure updated to include enable_nmi field",
            "compatible": false
        },
        {
            "code": "ERAD_configCounterInCumulativeMode",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_configCounterInCumulativeMode(ERAD_CounterInstance instance,ERAD_Counter_Config config_params, ERAD_Counter_Input_Event start_event,ERAD_Counter_Input_Event stop_event);",
            "fixMsg": "ERAD_Counter_Config structure updated to include enable_nmi field",
            "compatible": false
        },
        {
            "code": "ERAD_profile",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_profile(ERAD_Profile_Params config_params)",
            "fixMsg": "ERAD_Profile_Params structure updated to use enumfor EBC, SEC instances instead of the base addresses",
            "compatible": false
        },
        {
            "code": "ERAD_configMask",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_configMask(ERAD_Mask mask, uint32_t instances, bool enable_int, bool enable_nmi)",
            "fixMsg": "Function remains same with additional parameter to configure enable_nmi",
            "compatible": false
        },
        {
            "code": "ERAD_enableCounterResetInput",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_enableCounterResetInput(ERAD_CounterInstance instance, ERAD_Counter_Input_Event reset_event)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_disableCounterResetInput",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_disableCounterResetInput(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_clearCounterEvent",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_clearCounterEvent(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_clearCounterOverflow",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_clearCounterOverflow(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_getCurrentCount",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_getCurrentCount(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_setCurrentCount",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_setCurrentCount(ERAD_CounterInstance instance, uint32_t value)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_getMaxCount",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_getMaxCount(ERAD_CounterInstance instance)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_setMaxCount",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_setMaxCount(ERAD_CounterInstance instance, uint32_t value)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "XBAR_enableOutputMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectOutputXbarInputSource(uint32_t base, XBAR_OutputNum output,XBAR_OutputXbarInputSource source)",
            "fixMsg": "OUTPUT X-BAR architecture does not require mux selection. Any number of input sources to the OUTPUT X-BAR can be enabled using the XBAR_selectOutputXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_setOutputMuxConfig",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectOutputXbarInputSource(uint32_t base, XBAR_OutputNum output,XBAR_OutputXbarInputSource source)",
            "fixMsg": "OUTPUT X-BAR architecture does not require mux selection. Any number of input sources to the OUTPUT X-BAR can be enabled using the XBAR_selectOutputXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_disableOutputMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_deselectOutputXbarInputSource(uint32_t base, XBAR_OutputNum output, XBAR_OutputXbarInputSource source)",
            "fixMsg": "OUTPUT X-BAR architecture does not require mux selection. XBAR_deselectOutputXbarInputSource can be used to disable individual input sources to the OUTPUT X-BAR",
            "compatible": false
        },
        {
            "code": "XBAR_enableEPWMMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectEpwmXbarInputSource(XBAR_TripNum trip, XBAR_EpwmXbarInputSource source)",
            "fixMsg": "EPWM X-BAR architecture does not require mux selection. Any number of input sources to the EPWM X-BAR can be enabled using the XBAR_selectEpwmXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_setEPWMMuxConfig",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectEpwmXbarInputSource(XBAR_TripNum trip, XBAR_EpwmXbarInputSource source)",
            "fixMsg": "EPWM X-BAR architecture does not require mux selection. Any number of input sources to the EPWM X-BAR can be enabled using the XBAR_selectEpwmXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_disableEPWMMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_deselectEpwmXbarInputSource(XBAR_TripNum trip, XBAR_EpwmXbarInputSource source)",
            "fixMsg": "EPWM X-BAR architecture does not require mux selection. XBAR_deselectEpwmXbarInputSource can be used to disable individual input sources to the EPWM X-BAR",
            "compatible": false
        },
        {
            "code": "XBAR_enableCLBMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectClbXbarInputSource(XBAR_AuxSigNum auxSignal, XBAR_ClbXbarInputSource source)",
            "fixMsg": "CLB X-BAR architecture does not require mux selection. Any number of input sources to the CLB X-BAR can be enabled using the XBAR_selectClbXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_setCLBMuxConfig",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectClbXbarInputSource(XBAR_AuxSigNum auxSignal, XBAR_ClbXbarInputSource source)",
            "fixMsg": "CLB X-BAR architecture does not require mux selection. Any number of input sources to the CLB X-BAR can be enabled using the XBAR_selectClbXbarInputSource API and these multiple sources are combined using OR gate",
            "compatible": false
        },
        {
            "code": "XBAR_disableCLBMux",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_deselectClbXbarInputSource(XBAR_AuxSigNum auxSignal, XBAR_ClbXbarInputSource source)",
            "fixMsg": "CLB X-BAR architecture does not require mux selection. XBAR_deselectClbXbarInputSource can be used to disable individual input sources to the CLB X-BAR",
            "compatible": false
        },
        {
            "code": "XBAR_invertOutputSignal",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_invertOutputSignal(uint32_t base, XBAR_OutputNum output, bool invert)",
            "fixMsg": "Function is compatible. Same Function to invert the output signal from OUTPUT/ EPWM/ MINDB/ ICL/ CLB X-BAR depending on the XBAR base address passed",
            "compatible": true
        },
        {
            "code": "XBAR_invertEPWMSignal",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_invertOutputSignal(uint32_t base, XBAR_OutputNum output, bool invert)",
            "fixMsg": "Function changed to XBAR_invertOutputSignal. Additional parameter base to select the XBAR. Same Function to invert the output signal from OUTPUT/ EPWM/ MINDB/ ICL/ CLB X-BAR depending on the XBAR base address passed",
            "compatible": false
        },
        {
            "code": "XBAR_invertCLBSignal",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_invertOutputSignal(uint32_t base, XBAR_OutputNum output, bool invert)",
            "fixMsg": "Function changed to XBAR_invertOutputSignal. Additional parameter base to select the XBAR. Same Function to invert the output signal from OUTPUT/ EPWM/ MINDB/ ICL/ CLB X-BAR depending on the XBAR base address passed",
            "compatible": false
        },
        {
            "code": "XBAR_setInputSignal",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_selectMindbXbarInputSource(XBAR_OutputNum output, XBAR_MindbXbarInputSource source) and XBAR_selectIclXbarInputSource(XBAR_OutputNum output,XBAR_IclXbarInputSource source)",
            "fixMsg": "Individual APIs to select the input sources for MINDB or ICL X-BAR",
            "compatible": false
        },
        {
            "code": "XBAR_lockInput",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_lockInput(uint32_t base, XBAR_InputNum input)",
            "fixMsg": "Function is compatible for INPUTXBAR only. F28 function locks the inputs to INPUT X-BAR, MINDB X-BAR, ICL X-BAR AND CLBINPUT X-BAR, while in F29, it can be used to lock the inputs to INPUT X-BAR only.",
            "compatible": true
        },
        {
            "code": "XBAR_lockOutput",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_lockConfiguration(uint32_t base)",
            "fixMsg": "Function changed to XBAR_lockConfiguration. Single API to lock the configuration of OUTPUT/ EPWM/ MINDB/ ICL/ CLB X-BAR depending on the base address passed.",
            "compatible": false
        },
        {
            "code": "XBAR_lockEPWM",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_lockConfiguration(uint32_t base)",
            "fixMsg": "Function changed to XBAR_lockConfiguration. Single API to lock the configuration of OUTPUT/ EPWM/ MINDB/ ICL/ CLB X-BAR depending on the base address passed.",
            "compatible": false
        },
        {
            "code": "XBAR_getOutputLatchStatus",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_getOutputLatchStatus(uint32_t base, XBAR_OutputNum output)",
            "fixMsg": "Function is compatible",
            "compatible": true
        },
        {
            "code": "XBAR_clearOutputLatch",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_clearOutputLatch(uint32_t base, XBAR_OutputNum output)",
            "fixMsg": "Function is compatible",
            "compatible": true
        },
        {
            "code": "XBAR_forceOutputLatch",
            "type": "function",
            "peripheral": "xbar",
            "fix": "XBAR_forceOutputLatch(uint32_t base, XBAR_OutputNum output)",
            "fixMsg": "Function is compatible",
            "compatible": true
        },
        {
            "code": "SysCtl_lockExtADCSOCSelect",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_lockRegister(SysCtl_LockRegister reg)",
            "fixMsg": "Function changed to  SysCtl_lockRegister by providing SYSCTL_LOCK_SYNCSELECT (or) SYSCTL_LOCK_ADCSOCOUTSELECT (or) SYSCTL_LOCK_ADCSOCOUTSELECT1",
            "compatible": false
        },
        {
            "code": "SysCtl_lockSyncSelect",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_lockRegister(SysCtl_LockRegister reg)",
            "fixMsg": "Function changed to  SysCtl_lockRegister by providing SYSCTL_LOCK_SYNCSELECT",
            "compatible": false
        },
        {
            "code": "SysCtl_lockErrControl",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "SysCtl_lockRegister(SysCtl_LockRegister reg)",
            "fixMsg": "Function changed to  SysCtl_lockRegister",
            "compatible": false
        },
        {
            "code": "ERAD_setCounterInputConditioning",
            "type": "function",
            "peripheral": "erad",
            "fix": "ERAD_setCounterInputConditioning(ERAD_CounterInstance instance, ERAD_Counter_Input_Type input_type, uint16_t options)",
            "fixMsg": "Function is compatible. Parameter is an enuminstead of base address",
            "compatible": true
        },
        {
            "code": "ERAD_GLOBAL_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BASE",
            "fixMsg": "The correct enum constant 'ERAD_BASE' should be used. Changed in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP1_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP0",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP0' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP2_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP1",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP1' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP3_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP2",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP2' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP4_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP3",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP3' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP5_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP4",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP4' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP6_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP5",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP5' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP7_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP6",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP6' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_HWBP8_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_BUSCOMP7",
            "fixMsg": "The correct enum constant 'ERAD_BUSCOMP7' should be used. All the driverlib functions which expects the ERAD HWBP base address as parameter has been updated to take in an ERAD BUSCOMP enumas parameter instead",
            "compatible": false
        },
        {
            "code": "DMA_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances are supported. In Lockstep mode, RTDMA1 can only be used.",
            "compatible": false
        },
        {
            "code": "DMA_CH1_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH1_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH1_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "DMA_CH2_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH2_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH2_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "DMA_CH3_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH3_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH3_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "DMA_CH4_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH4_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH4_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "DMA_CH5_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH5_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH5_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "DMA_CH6_BASE",
            "type": "enum",
            "peripheral": "dma",
            "fix": "RTDMA1CH6_BASE",
            "fixMsg": "The correct enum constant 'RTDMA1CH6_BASE' should be used. In F29H85x device, two RTDMA (RTDMA1/2) instances with 10 channels each are supported, and shared across all the CPUs. If device is configured in splitlock mode, recommended to use separate RTDMA modules in each CPU applications",
            "compatible": false
        },
        {
            "code": "ERAD_COUNTER1_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_COUNTER0",
            "fixMsg": "The correct enum constant 'ERAD_COUNTER0' should be used. All the driverlib functions which expects the ERAD counter base address as parameter has been updated to take in an enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_COUNTER2_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_COUNTER1",
            "fixMsg": "The correct enum constant 'ERAD_COUNTER1' should be used. All the driverlib functions which expects the ERAD counter base address as parameter has been updated to take in an enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_COUNTER3_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_COUNTER2",
            "fixMsg": "The correct enum constant 'ERAD_COUNTER2' should be used. All the driverlib functions which expects the ERAD counter base address as parameter has been updated to take in an enumas parameter instead",
            "compatible": false
        },
        {
            "code": "ERAD_COUNTER4_BASE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "ERAD_COUNTER3",
            "fixMsg": "The correct enum constant 'ERAD_COUNTER3' should be used. All the driverlib functions which expects the ERAD counter base address as parameter has been updated to take in an enumas parameter instead",
            "compatible": false
        },
        {
            "code": "IPC_FLAG0",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG0",
            "fixMsg": "The correct enum constant 'IPC_FLAG0' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG1",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG1",
            "fixMsg": "The correct enum constant 'IPC_FLAG1' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG2",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG2",
            "fixMsg": "The correct enum constant 'IPC_FLAG2' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG3",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG3",
            "fixMsg": "The correct enum constant 'IPC_FLAG3' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG4",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG4",
            "fixMsg": "The correct enum constant 'IPC_FLAG4' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG5",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG5",
            "fixMsg": "The correct enum constant 'IPC_FLAG5' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG6",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG6",
            "fixMsg": "The correct enum constant 'IPC_FLAG6' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        },
        {
            "code": "IPC_FLAG7",
            "type": "enum",
            "peripheral": "ipc",
            "fix": "IPC_FLAG7",
            "fixMsg": "The correct enum constant 'IPC_FLAG7' should be used. In F29H85x device, IPC interrupt can only be triggered by IPC_FLAG0",
            "compatible": true
        }
    ],
    "removed": [
        {
            "code": "ERAD_INST_CRC1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC5",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC6",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC7",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_INST_CRC8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_BUSCOMP_BUS_VPC",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x.Closest alternative is  ERAD_BUSCOMP_BUS_VPC_I_ALIGNED",
            "compatible": false
        },
        {
            "code": "ERAD_BUSCOMP_BUS_VPC_R1_ALIGNED",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x.Closest alternative is  ERAD_BUSCOMP_BUS_VPC_I_ALIGNED",
            "compatible": false
        },
        {
            "code": "ERAD_BUSCOMP_BUS_VPC_R2_ALIGNED",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x.Closest alternative is  ERAD_BUSCOMP_BUS_VPC_I_ALIGNED",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_NONE",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP5",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP6",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP7",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP8",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_OR1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_OR2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_OR3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_OR4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_AND1",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_AND2",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_AND3",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_CRC_QUAL_HWBP_AND4",
            "type": "enum",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "No CRC unit. enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX12_ECAP7_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX27_ERRORSTS",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x. Closest alternative is XBAR_OUT_ESM_GEN_EVENT",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX32_EPWM1_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX32_EPWM1_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX32_EPWM1_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX33_EPWM2_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX33_EPWM2_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX33_EPWM2_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX34_EPWM3_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX34_EPWM3_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX34_EPWM3_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX35_EPWM4_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX35_EPWM4_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX35_EPWM4_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX36_EPWM5_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX36_EPWM5_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX36_EPWM5_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX37_EPWM6_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX37_EPWM6_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX37_EPWM6_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX38_EPWM7_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX38_EPWM7_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX38_EPWM7_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX39_EPWM8_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX39_EPWM8_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX39_EPWM8_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX40_EPWM9_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX40_EPWM9_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX40_EPWM9_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX41_EPWM10_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX41_EPWM10_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX41_EPWM10_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX42_EPWM11_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX42_EPWM11_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX42_EPWM11_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX43_EPWM12_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX43_EPWM12_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX43_EPWM12_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX44_EPWM13_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX44_EPWM13_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX44_EPWM13_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX45_EPWM14_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX45_EPWM14_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX45_EPWM14_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX46_EPWM15_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX46_EPWM15_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX46_EPWM15_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX47_EPWM16_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX47_EPWM16_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX47_EPWM16_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX48_EPWM17_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX48_EPWM17_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX48_EPWM17_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX49_EPWM18_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX49_EPWM18_DE_DEMONTRIP",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX49_EPWM18_DE_ACTIVE",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX00_XTRIP_OUT1",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX01_XTRIP_OUT2",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX08_XTRIP_OUT3",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX09_XTRIP_OUT4",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX16_XTRIP_OUT5",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX17_XTRIP_OUT6",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX24_XTRIP_OUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_OUT_MUX25_XTRIP_OUT8",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX12_ECAP7_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX16_INPUTXBAR2_INPUT7",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX16_ERRORSTS",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX17_CLAHALT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX18_INPUTXBAR2_INPUT8",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX20_INPUTXBAR2_INPUT9",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX22_INPUTXBAR2_INPUT10",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX24_INPUTXBAR2_INPUT11",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX26_INPUTXBAR2_INPUT12",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX28_INPUTXBAR2_INPUT13",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX30_INPUTXBAR2_INPUT14",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "F29H85x does not have a dedicated CLBINPUT XBAR, use the XBAR_EPWM_INPUTXBAR_INPUTx instead.",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX31_ERRORSTS",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x. closest alternative is XBAR_OUT_ESM_GEN_EVENT",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX38_ECAP7_TRIPOUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX48_PIEERR",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_EPWM_MUX49_ECCDBLERR",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX12_ECAP7_OUT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX17_CLAHALT",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "XBAR_CLB_MUX19_ERRORSTS",
            "type": "enum",
            "peripheral": "xbar",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x. closest alternative is  XBAR_CLB_ESM_GEN_EVENT",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_1",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_2",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_3",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_4",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_5",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_6",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_AUXPLLCLK_DIV_7",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_1",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_2",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_4",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_6",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_8",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_10",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_12",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_LSPCLK_PRESCALE_14",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "CPUTIMER_CLOCK_SOURCE_AUX",
            "type": "enum",
            "peripheral": "cputimer",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_PLLRAW",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "SYSCTL_CLOCKOUT_AUXPLLCLK",
            "type": "enum",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "enum constant removed from F29H85x",
            "compatible": false
        },
        {
            "code": "ADC_setupSOCRefloChannel",
            "type": "function",
            "peripheral": "adc",
            "fix": "NA",
            "fixMsg": "Not available in F29x. This function was added specifically for F28P65x since VRELO was not directly connected to all ADC instances. This is not the case for F29H85x",
            "compatible": false
        },
        {
            "code": "EPWM_setupEPWMLinks",
            "type": "function",
            "peripheral": "epwm",
            "fix": "NA",
            "fixMsg": "In F28P65x, XLINK can be configured at register-level granularity. In F29H85x, this is handled in Sysctl. Configuration is available at the EPWM instance level",
            "compatible": false
        },
        {
            "code": "SysCtl_setAuxPLLClk",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "AUXPLL is not available in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_getAuxClock",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "AUXPLL is not available in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_setAuxClock",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "AUXPLL is not available in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_setLowSpeedClock",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "LSPCLK domain is not available in F29H85x. The peripherals are directly clocked using SYSCLK.",
            "compatible": false
        },
        {
            "code": "SysCtl_getLowSpeedClock",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "LSPCLK domain is not available in F29H85x. The peripherals are directly clocked using SYSCLK.",
            "compatible": false
        },
        {
            "code": "SysCtl_enterHaltMode",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Halt mode is not supported in F29 device. It supports IDLE and STANDBY modes.",
            "compatible": false
        },
        {
            "code": "SysCtl_enableWatchdogInHalt",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Halt mode is not supported in F29 device.",
            "compatible": false
        },
        {
            "code": "SysCtl_enableWatchdogStandbyWakeup",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not applicable. In F29H85x, any interrupt can wake up the device from STANDBY Mode.",
            "compatible": false
        },
        {
            "code": "SysCtl_disableWatchdogStandbyWakeup",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not applicable. In F29H85x, any interrupt can wake up the device from STANDBY Mode.",
            "compatible": false
        },
        {
            "code": "SysCtl_setPeripheralAccessControl",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x Access control can be enabled using SSU or RTDMA MPU module.",
            "compatible": false
        },
        {
            "code": "SysCtl_getPeripheralAccessControl",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x Access control can be enabled using SSU or RTDMA MPU module.",
            "compatible": false
        },
        {
            "code": "SysCtl_clearCPU2ResetStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x Use function SysCtl_isCPU2Reset to get the CPU reset status",
            "compatible": false
        },
        {
            "code": "SysCtl_setSemOwner",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x Clock config registers are only writable by CPU1.",
            "compatible": false
        },
        {
            "code": "SysCtl_getSemOwner",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_getPIEVErrAddr",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_enableLockStep",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x Lockstep is enabled by default. Once disabled, cannot be enabled back.",
            "compatible": false
        },
        {
            "code": "SysCtl_getLCMErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_clearLCMErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_setLCMErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_getRegParityErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_clearRegParityErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_setRegParityErrorFlag",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_allocateFlashBank",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not applicable in F29H85x Flash bank allocation is done in BANKMGMT sector",
            "compatible": false
        },
        {
            "code": "SysCtl_allocateDxRAM",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not applicable in F29H85x All RAMs are accessible to all CPUs",
            "compatible": false
        },
        {
            "code": "SysCtl_lockDxRAMConfig",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not applicable in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_getDeviceUID0",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_getDeviceUID1",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_configureType",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_isConfigTypeLocked",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "Interrupt_illegalOperationHandler",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "NA",
            "fixMsg": "Not available. In F29, this is same as NMI Handler",
            "compatible": false
        },
        {
            "code": "Interrupt_enableInCPU",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "NA",
            "fixMsg": "Not applicable for F29H85x EINT/ENINT instruction enables all the INTs.",
            "compatible": false
        },
        {
            "code": "Interrupt_disableInCPU",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "NA",
            "fixMsg": "Not applicable for F29H85x DINT/DISINT instruction diables all the INTs.",
            "compatible": false
        },
        {
            "code": "Interrupt_clearACKGroup",
            "type": "function",
            "peripheral": "interrupt",
            "fix": "NA",
            "fixMsg": "Not applicable for F29H85x PIPE does not have the concept of groups and hence acking the group is not required.",
            "compatible": false
        },
        {
            "code": "IPC_registerInterrupt",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x, instead use the interrupt driver function",
            "compatible": false
        },
        {
            "code": "IPC_unregisterInterrupt",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x, instead use the interrupt driver function",
            "compatible": false
        },
        {
            "code": "IPC_setBootMode",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_getBootMode",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_setBootStatus",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_getBootStatus",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_initMessageQueue",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Message queues not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_sendMessageToQueue",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Message queues not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "IPC_readMessageFromQueue",
            "type": "function",
            "peripheral": "ipc",
            "fix": "NA",
            "fixMsg": "Message queues not supported in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_getOwnership",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x Separate functions available for each submodule. Values of ERAD_OWNER_DEBUGGER and ERAD_OWNER_APPLICATION interchanged (taken care by enum)",
            "compatible": false
        },
        {
            "code": "ERAD_resetCounter",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x",
            "compatible": false
        },
        {
            "code": "ERAD_getHaltStatus",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x",
            "compatible": false
        },
        {
            "code": "SysCtl_enableNMIGlobalInterrupt",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getNMIStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getNMIFlagStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_isNMIFlagSet",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_clearNMIStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_clearAllNMIFlags",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_forceNMIFlags",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getNMIWatchdogCounter",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_setNMIWatchdogPeriod",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getNMIWatchdogPeriod",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getNMIShadowFlagStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_isNMIShadowFlagSet",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_isErrorTriggered",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getErrorPinStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_forceError",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_clearError",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_selectErrPinPolarity",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getInterruptStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_clearInterruptStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_setInterruptStatus",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_getInterruptStatusMask",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_setInterruptStatusMask",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "In F29H85x, NMI is handled as part of ESM module. It also does not support SYS_ERR interrupt. All the error events tied to this interrupt channel are connected to ESM module. User may configure the error events to cause an NMI / Interrupt / Error pin influence or other events in the ESM module Please refer to API guide for more details on ESM driver APIs",
            "compatible": false
        },
        {
            "code": "SysCtl_setLFUCPU",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_getLFUCPU",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_setLFUCLA1",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_getLFUCLA1",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_swapPieVectorAndLS01",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_swapPieVector",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_isPieVectorSwap",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_swapLS01",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_isLS01Swap",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_setLFUUserRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_getLFUUserRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockLFUConfigRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockLFUUserRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_unlockLFUConfigRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_unlockLFUUserRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_commitLFUConfigRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_commitLFUUserRegister",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockClkConfig",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockSysConfig",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockCPUSelectRegs",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockAccessControlRegs",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "SysCtl_lockConfigRegs",
            "type": "function",
            "peripheral": "sysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ASysCtl_lockCMPSSCTL",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ASysCtl_enableADCDACLoopback",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ASysCtl_disableADCDACLoopback",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ASysCtl_enableGPIOInputBuffer",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ASysCtl_disableGPIOInputBuffer",
            "type": "function",
            "peripheral": "asysctl",
            "fix": "NA",
            "fixMsg": "Not available in F29H85x device",
            "compatible": false
        },
        {
            "code": "ERAD_isValidCRCBase",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_initCRC",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_enableCRC",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_disableCRC",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_getCurrentCRC",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_setSeed",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        },
        {
            "code": "ERAD_setCRCQualifier",
            "type": "function",
            "peripheral": "erad",
            "fix": "NA",
            "fixMsg": "Not supported as ERAD module in F29H85x device does not support the CRC feature",
            "compatible": false
        }
    ]
}